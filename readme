Inventory Management + GenAI Interface

Overview

This project contains two services:

inventory-service : Manages inventory for tshirts and pants.
mcp-server : Uses Claude (Anthropic) to convert natural language queries into inventory actions.

---

Setup Instructions

Clone the repository

bash
git clone <your-repo-url>
cd inventory-mcp-task


2. Create and activate a Python virtual environment


python3 -m venv venv
source venv/bin/activate
pip install fastapi uvicorn pydantic requests anthropic

3. Run the Inventory Service


cd inventory-service
uvicorn main:app --reload --port 8000

4. Set your Claude API key

Get your API key from [Anthropic](https://console.anthropic.com/keys) and set it in your terminal:


export ANTHROPIC_API_KEY=your_claude_api_key


### 5. Run the MCP Server


cd ../mcp-server
uvicorn main:app --reload --port 8001



Example Requests

Inventory Service

Get inventory


curl -X GET http://localhost:8000/inventory


Modify inventory


curl -X POST http://localhost:8000/inventory \
  -H "Content-Type: application/json" \
  -d '{"item": "tshirts", "change": -5}'

MCP Server

Natural language query


curl -X POST http://localhost:8001/mcp \
  -H "Content-Type: application/json" \
  -d '{"query": "I sold 3 t shirts"}'

Another example


curl -X POST http://localhost:8001/mcp \
  -H "Content-Type: application/json" \
  -d '{"query": "Add 5 pants"}'


Get inventory via NL


curl -X POST http://localhost:8001/mcp \
  -H "Content-Type: application/json" \
  -d '{"query": "How many pants and shirts do I have?"}'
  

---

Design Choices

FastAPI is used for both services because it's easy to use and automatically creates API docs.
In-memory dictionary is used to store inventory — no need for a database since this is a small project.
Claude Opus 4 is used as the AI model because it’s accurate and simple to connect with.
Prompt engineering: I gave the AI clear instructions and examples so it knows how to turn natural language into structured JSON actions.
Error handling: The MCP server checks if the AI output is valid and handles problems like unknown items or bad formatting with clear error messages.


OpenAPI Docs

- Inventory service docs: [http://localhost:8000/docs](http://localhost:8000/docs)
- MCP server docs: [http://localhost:8001/docs](http://localhost:8001/docs)
